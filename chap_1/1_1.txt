C语言是什么样的语言

1.1.1 比喻
	C语言就恰如这个工具，也就是说，它是一门：
		>为了解决眼前问题，由开发现场的人发明的;
		>虽然使用方便
		>但看上去不怎么顺眼
		>如果不熟悉的人糊里糊涂地使用了它，难免会带来悲剧
		
1.1.2 C语言的发展历程
	基本观点：C语言是为了开发Unix操作系统而设计的语言（但最早的Unix是用汇编写成的）
	Unix的开发者Ken Tompson开发了一种称为B的语言，它是1967年剑桥大学Martin Richard开发的BCPL的精简版本，BCPL的前身是1963年剑桥大学和伦敦大学共同研究开发的CPL（Combined Programming Language).B是解释型的语言，因此执行的效率非常低，后来的Unix开发中放弃了使用B语言。
	1971年Ken Tompson的同事Dennis Ritchie对B语言作了改良，称为New B，之后被称为C语言。
	1978年，被称为C语言宝典的《The C Programming Language》面世。
	
1.1.3 不完备和不统一的语法
	C语言是开发现场的人们根据自身的需要开发出来的语言，所以具备极高的实用性，但是反过来，从人类工程学的角度看，它就不那么完美了。
	提高编译器的警告级别/不可无视甚至制止编译器的警告
	
1.1.4 ANSI C
	1989年，ANSI通过了C语言的标准规范，成为C89
	
1.1.5 C的宝典——K&R
	
1.1.6 C的理念
	ANSI C标准，附有Rationale，其中交代了“keep the spirit of C”,其中C的精神是这样定义的：
		>请信任程序员
		>不要阻止程序员去做需要做的工作
		>保持语言的小巧与简单
		>为每一种操作只提供一种方法
		>就算不能保证可移植性，也要追求运行效率
		
		前两点是重要的，这表明C语言是危险的语言，处处充满陷阱。C语言在运行时的检查总是不充分的
		C是抱着“程序员万能”的理念设计出来的。
		还好，现在的操作系统可以替我们停止一些已经明显出现奇怪动作的应用程序，避免危险发生。
		
1.1.7 C的主体
	考考：以下哪些是C语言的保留字：if printf main malloc sizeof
	回答：只有if 和 sizeof
	
	比如输入输出不是C语言本身的一部分，而是通过库函数的形式留给程序员区调用。
	
1.1.8 C是只能使用标量的语言
	scalar
	标量就是指char、int、double、和枚举类型等数值类型，以及指针
	而数组、结构体、共用体这样的将多个标量进行组合的类型，称之为“聚合类型”
	诸如 if (str == "abc"),这种表达式是不能使用的
	因为==两边必须是标量才行
	ANSI C中有几个追加的功能：
		>结构体的一次赋值
		>将结构体作为函数返回值传递
		>将结构体作为函数返回值返回
		>auto变量的初始化
		>但是C语言还是不能做到对数组进行整合利用，因为C语言的数组是const修饰符
